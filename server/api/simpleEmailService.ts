import sgMail from '@sendgrid/mail';

// Setup SendGrid with API key
if (process.env.SENDGRID_API_KEY) {
  sgMail.setApiKey(process.env.SENDGRID_API_KEY);
}

interface SimpleEmailRequest {
  recipientEmail: string;
  senderEmail?: string;
  senderName?: string;
  subject: string;
  content: string;
}

/**
 * Send a simple plain text report via email using SendGrid
 * @param emailData Email data including recipient, subject and content
 * @returns Success status and message
 */
export async function sendSimpleEmail(emailData: SimpleEmailRequest): Promise<{success: boolean, message: string}> {
  if (!process.env.SENDGRID_API_KEY) {
    return {
      success: false,
      message: "SendGrid API key not configured. Please add SENDGRID_API_KEY to your environment variables."
    };
  }

  if (!process.env.SENDGRID_VERIFIED_SENDER) {
    return {
      success: false,
      message: "SendGrid verified sender not configured. Please add SENDGRID_VERIFIED_SENDER to your environment variables."
    };
  }

  try {
    // Format the HTML content
    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h1 style="color: #2563eb; font-size: 24px; margin-bottom: 20px;">Intelligence Analysis Report</h1>
        <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
          <h2 style="color: #1e40af; font-size: 18px; margin-top: 0;">Report Summary</h2>
          <p style="white-space: pre-wrap; font-family: monospace; font-size: 14px; line-height: 1.6;">
            ${emailData.content.replace(/\n/g, '<br>')}
          </p>
        </div>
        <p style="color: #6b7280; font-size: 12px; margin-top: 30px;">
          This report was generated by the Intelligence Analysis Platform.
        </p>
      </div>
    `;

    // Setup the email
    const msg = {
      to: emailData.recipientEmail,
      from: {
        email: process.env.SENDGRID_VERIFIED_SENDER,
        name: emailData.senderName || 'Intelligence Analysis Platform'
      },
      subject: emailData.subject,
      text: emailData.content,
      html: htmlContent
    };

    // Send the email
    await sgMail.send(msg);
    
    return {
      success: true,
      message: "Email sent successfully"
    };
  } catch (error: any) {
    console.error('SendGrid error:', error);
    
    if (error.response) {
      console.error('SendGrid error details:', error.response.body);
    }
    
    return {
      success: false,
      message: error.message || "Failed to send email"
    };
  }
}